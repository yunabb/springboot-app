<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.PostMapper">

	<insert id="insertPost" parameterType="Post">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select spring_posts_seq.nextval from dual
		</selectKey>
		insert into spring_posts
		(post_no, post_title, post_user_id, post_content)
		values
		(#{no}, #{title}, #{userId}, #{content})
	</insert>
	
	<insert id="insertAttachedFile" parameterType="AttachedFile">
		insert into spring_post_attached_files
		(post_no, file_name)
		values
		(#{postNo}, #{filename})
	</insert>
	
	<insert id="insertTag" parameterType="Tag">
		insert into spring_post_tags
		(post_no, tag_content)
		values
		(#{postNo}, #{content})
	</insert>
	
	<select id="getTotalRows" resultType="int">
		select
			count(*)
		from
			spring_posts
		where
			post_deleted = 'N'
	</select>
	
	<select id="getPosts" parameterType="map" resultType="PostListDto">
		select
			post_no 			as no,
			post_title			as title,
			post_user_id		as userId,
			user_name			as userName,
			post_read_count		as readCount,
			post_comment_count	as commentCount,
			post_created_date	as createdDate
		from (
			select
				row_number() over (order by A.post_no desc) row_numbers,
				A.post_no,
				A.post_title,
				A.post_user_id,
				B.user_name,
				A.post_read_count,
				A.post_comment_count,
				A.post_created_date
			from
				spring_posts A, spring_users B
			where
				A.post_deleted = 'N'
				and A.post_user_id = B.user_id
			)
		where
			row_numbers between #{begin} and #{end}
	</select>
	
	<select id="getPostByNo" parameterType="int" resultType="Post">
		select
			post_no				as no,
			post_title			as title,
			post_user_id		as userId,
			post_content		as content,
			post_read_count		as readCount,
			post_comment_count	as commentCount,
			post_deleted		as deleted,
			post_updated_date	as updatedDate,
			post_created_date	as createdDate
		from
			spring_posts
		where
			post_no = #{value}
	</select>
	
	<update id="updatePost" parameterType="Post">
		update
			spring_posts
		set
			post_title = #{title},
			post_content = #{content},
			post_read_count = #{readCount},
			post_comment_count = #{commentCount},
			post_deleted = #{deleted},
			post_updated_date = sysdate
		where
			post_no = #{no}
	</update>
	
	<select id="getPostDetailByNo" parameterType="int" resultType="PostDetailDto">
		select 
			A.post_no				as no,
			A.post_title			as title,
			A.post_user_id			as userId,
			B.user_name				as userName,
			A.post_deleted			as deleted,
			A.post_read_count		as readCount,
			A.post_comment_count	as commentCount,
			A.post_content			as content,
			A.post_created_date		as createdDate,
			A.post_updated_date		as updatedDate
		from
			spring_posts A, spring_users B
		where
			A.post_user_id = B.user_id
			and A.post_no = #{value}
	</select>
	
	<select id="getAttachedFilesByPostNo" parameterType="int" resultType="AttachedFile">
		select
			post_no 	as postNo,
			file_name 	as filename
		from
			spring_post_attached_files
		where
			post_no = #{value}
	</select>
	
	<select id="getTagsByPostNo" parameterType="int" resultType="Tag">
		select
			post_no 	as postNo,
			tag_content	as content
		from
			spring_post_tags
		where
			post_no = #{value}
	</select>
</mapper>
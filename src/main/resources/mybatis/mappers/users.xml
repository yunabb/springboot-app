<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.UserMapper">

	<insert id="insertUser" parameterType="User">
		insert into spring_users
			(user_id, user_password, user_name, user_email, user_tel)
		values
			(#{id}, #{encryptPassword}, #{name}, #{email}, #{tel})
	</insert>
	
	<update id="updateUser" parameterType="User">
		update 
			spring_users
		set
			user_password = #{encryptPassword},
			user_tel = #{tel},
			user_photo = #{photo},
			user_deleted = #{deleted},
			user_updated_date = sysdate
		where
			user_id = #{id}
	</update>
	
	<select id="getUserById" parameterType="string" resultType="User">
		select
			user_id as id,
			user_password as encryptPassword,
			user_name as name,
			user_email as email,
			user_tel as tel,
			user_photo as photo,
			user_deleted as deleted,
			user_updated_date as updatedDate,
			user_created_date as createdDate
		from
			spring_users
		where
			user_id = #{value}
	</select>
	
	<select id="getUserByEmail" parameterType="string" resultType="User">
		select
			user_id as id,
			user_password as encryptPassword,
			user_name as name,
			user_email as email,
			user_tel as tel,
			user_photo as photo,
			user_deleted as deleted,
			user_updated_date as updatedDate,
			user_created_date as createdDate
		from
			spring_users
		where
			user_email = #{value}
	</select>
	
	<select id="getAllUsers" resultType="User">
		select
			user_id as id,
			user_password as encryptPassword,
			user_name as name,
			user_email as email,
			user_tel as tel,
			user_photo as photo,
			user_deleted as deleted,
			user_updated_date as updatedDate,
			user_created_date as createdDate
		from
			spring_users
		order by
			user_name asc
	</select>
</mapper>